{"./":{"url":"./","title":"UIFlow","keywords":"","body":"UIFlow Welcome to UIFlow, access address flow.m5stack.com What is UIFlow?： A web-based programming tool Use Blockly Visual Programming Language Blockly seamlessly switch Python code "},"en/base/Update.html":{"url":"en/base/Update.html","title":"Update firmware","keywords":"","body":"Update firmware For Windows Downloading the driver Go tom5stack.comand download the driver for your OSCP210X driver Installing the driver Extract the zip file and run the install package in the extracted folder ————————————————————————————————— Download M5Burner Go toflow.m5stack.comand click the gear in the top right corner. From the settings panel choose the M5burner for your systemM5Burner tool Burning process Extract the burner package and double click on the M5 Burner icon. Connect your M5Stack device and select its COM port from the list (Check Windows device manager if you are unsure of your COM port).Select the recommended baud rate 921600 and then select the firmware you wish to flash. Now press the burn button, your firmware will have flashed successfully once you see the message \"leaving staying in bootloader\". Reset your device to see the new firmware. For Mac Downloading the driver Go tom5stack.comand download the driver for your OSCP210X driver Installing the driver Extract the dmg file and run the install package in the extracted folder Download M5Burner Go toflow.m5stack.comand click the gear in the top right corner. From the settings panel choose the M5burner for your systemM5Burner tool Burning process Click on the downloaded burner file to open it. The burner should auto detect the serial port your M5 Device is plugged into. Select your desired firmware and hit burn. Once the circle has completed your firmware will have completed flashing. Mac Burner Troubleshooting You may get a message on opening the mac burner saying it is damaged. This is not the case, it is just an issue with your OS blocking un-certified software. This issue will be resolved soon, However in the meantime you'll have to use this workaround. Open up the terminal Applications>utilities>terminal and type sudo spctl --master-disable. Now you'lll be able to use the burner. We reccommend you turn the app security back on after you have completed flashing your device. Open the terminal again but this time type sudo spctl --master-enable "},"en/base/Setting_WIFI.html":{"url":"en/base/Setting_WIFI.html","title":"Configuring WIFI","keywords":"","body":"WIFI Setup UIFlow and M5GO are two seperate concepts，UiFlow is the platform we use to program M5GO and we need to connect the two before this is possible Initiate device and setup WIFI Single press the red start button on the side of the M5GO, When the logo appears press the setup button quickly to enter the wi-fi setup menu. Select change wi-fi connect and then connect to the M5GO's access point with your computer or mobile device (The access point will look something like \"M5Stack-xxxx\") Input your wi-fi credentials Once you have connected to your M5GO's access point you can enter the wifi settings page by scanning the QR code or by entering 192.168.4.1 into your browser. Once you have arrived at the page choose your home wifi network from the list, enter your password and click configure "},"en/base/setting_APIkey.html":{"url":"en/base/setting_APIkey.html","title":"API Key","keywords":"","body":"API Key Entering Code Upload Mode After turning on the M5stack, select the Upload mode by pressing the left face button. Assuming you have already setup wifi on your device, the M5stack will connect to your network and once it is connected will display a QR code and a unique API Key. We can now start to program the device by scanning the M5stack with a mobile device or entering the url displayed at the top of the screen into your browser flow.m5stack.com Connecting your device with API Key Once you have opened the UIflow website you can to connect to the web platform by clicking the gear icon in the top right corner, enter your API key and select your device and preferred language. Once you have entered the API Key click OK to confirm** "},"en/base/UIFlow.html":{"url":"en/base/UIFlow.html","title":"UIFlow layout","keywords":"","body":"UIFlow interface UIFlow's interface is seperated into 5 main sections Coding area Drag code blocks from the blocks list into the coding area and connect them together to create a program Menu Bar The menu bar contains most of the important functions of the interface such as（Example，Undo and redo，upload，run code，download code，save code etc...） BlocklyPython All the code we create in blocks can be converted to python by pressing this switch UI Designer Drag the UI elements (Title, Lable etc..) down to the M5GO screen to design an avatar or UI interface (note: You must press the run code button to see the changes on the M5's screen) Units Units are sensors and actuators that can be plugged into the M5GO, and here is where we configure them "},"en/base/Run_Program.html":{"url":"en/base/Run_Program.html","title":"download program","keywords":"","body":"Run，Download program Running a program After you've finished programming press the play button in the top right corner to run your code Downloading a program Whats the difference between running and downloading a program? The play button puts our code into the volatile memory of your M5stack. Which means it will be lost once you turn off the M5stack. The download function however will store your program in the flash memory of your device which will not be erased on reboot. Each time you turn on the M5stack after downloading a program, that program will run automatically, and you can also select it from the app list which is accessed by pressing the center button on boot up. "},"en/Start_programming/Start_programming.html":{"url":"en/Start_programming/Start_programming.html","title":"Start programming","keywords":"","body":"Start programming After learning from the previous chapter, you have a preliminary understanding of some of the basic operations of UIFlow. Let's start programming.！ "},"en/Start_programming/Program_structure.html":{"url":"en/Start_programming/Program_structure.html","title":"Program structure","keywords":"","body":"Program structure Setup When you open UIFlow, you will find that there is already a Setup block at the beginning. Each program must have a Setup block. The program runs from the Setup block and will only run once. You can think of it as a Initialization block of the program Loop Loop is an infinite loop block. When it is executed, it will execute the program contained in the block indefinitely until some event occurs to stop it. For example, M5GO shuts down, it does not have to exist in the program, but in order to let the program continue You can add it when running, or when implementing certain features. Program connection Blocks can be connected between the blocks by means of a snap on the block, just like a jigsaw Program execution order The program is executed from top to bottom. When the program starts running, first enter the Setup single execution initialization program, and then enter the Loop to continuously cycle the main program. "},"en/Start_programming/Button.html":{"url":"en/Start_programming/Button.html","title":"Button","keywords":"","body":"Button Function Description M5GO provides three panel buttons (A, B, C), through the Button Block, we can use these three buttons to achieve control initiative Button Directly controlled by physical buttons on the M5GO panel passive Button The button can be triggered by the program, and more functions can be realized with the active Button. Instructions Put the program that needs to be run after pressing the button, put it in the Button Block, and modify the corresponding button position. "},"en/Start_programming/Wait.html":{"url":"en/Start_programming/Wait.html","title":"Wait","keywords":"","body":"Wait Function Description Wait is a delay block in the Timer option, you can set the time of Wait execution, and add to the program according to requirements. Wait Modify the number in the data frame to change the time of the Wait delay Instructions Add the Wait Block to the program that needs to be delayed and set the time. When the program executes to it, it will play a delay. "},"en/Hardwares/Hardwares.html":{"url":"en/Hardwares/Hardwares.html","title":"Control hardware","keywords":"","body":"Hardwares "},"en/Hardwares/Speaker.html":{"url":"en/Hardwares/Speaker.html","title":"Speaker","keywords":"","body":"Speaker Feature introduction The M5Stacks speaker can be controlled by the speaker blocks to produce sound of varying frequency, duration and volume Speaker.beep Output a sound of a set frequency and duration Speaker.volume Control the speaker volume play.tone Play a specific musical note for a set duration of beats Attention The average human can only hear frequencies within the 20Hz~20KHz range，therefore frequencies set outside of this range will not be audible Usage The Speaker can be used to output melodies or sounds for notification purposes "},"en/Hardwares/RGB.html":{"url":"en/Hardwares/RGB.html","title":"RGB","keywords":"","body":"RGB Feature introduction The LED bars look great lit up in all different colours and we can control them in many differnt ways. Set Rgb Bar color Set all the LEDs on each bar to a specified color Set left side Rgb Bar color Set only the LEDs on the left bar to a specified color(using the drop down list we can change this to right) Set the 1st Rgb colr Set the 1st or other selected LED in the LED bar to a specified color Set Rgb brightness Set the brightness of the LED bar Usage The LED bar could be used as a meter for the input level of the microphone or to visualise the intensity of a sensor "},"en/Hardwares/IMU.html":{"url":"en/Hardwares/IMU.html","title":"IMU","keywords":"","body":"IMU (Internal Measurement Unit) Feature introduction The IMU Blocks get data from the M5GOs accelerometer and magnetometer.The blocks are set to recieve force data in the X，Y and Z directions. These blocks can also sense what orientation the M5 device is in and its acceleration. Get X Get the accelerometers x position Get Y Get the accelerometers y position Get Z Get the accelerometers z position Usage The accelerometer could be used to create a game controlled by tilt or a device that can alert others if an elderly person falls down "},"en/Display/Dispaly.html":{"url":"en/Display/Dispaly.html","title":"Image display","keywords":"","body":"Show Image "},"en/Display/Emoji.html":{"url":"en/Display/Emoji.html","title":"Emoji","keywords":"","body":"Emoji Feature introduction UIFlow has a Block that makes the creation of simple images on the screen a walk in the park. By clicking the squares on the emoji grid we can draw a picture and use the color swatch to set the color of the pixels Set emoji map in Click on the squares of the grid to set which pixels will be filled with color on the pixel grid Set line x row x in This block allows you to individually set the position and color of individual pixels on the grid Set background image x Choose from a list of preset backgrounds for the backdrop of the grid 使用方法 When the grid has been filled and you have uploaded your code you will see the picture appear on the M5 screen "},"en/Display/UI.html":{"url":"en/Display/UI.html","title":"Geometry","keywords":"","body":"UI Elements Feature introduction UIFlow Designer allows you to create and manipulate various shapes and images on the M5Stack screen Title Display a title bar at the top of the screen Label Display a text element wherever you place it on the screen Rect Display a square or rectangle (Parameters can be set by clicking on the element and changing the settings) Circle Display a circle (Parameters can be set by clicking on the element and changing the settings) image Display an image that has been uploaded to the M5 device Adding and removing elements Add an element Remove an element Programming UI elements Method 1：After placing an element on the screen, single press it to display the parameters window. From here you can adjust the elements color,size,position and layer Method 2：After adding an element to the screen, its equivalent blocks will appear in the UI section of the blocks menu. Using blocks you can program all of the parameters of the element within your program. "},"en/Display/image.html":{"url":"en/Display/image.html","title":"image","keywords":"","body":"Displaying images Feature introduction Upload some photos from your computer and display them on your device（Attention：Images must be below 25k，in jpg or bmp format） Upload image Connect to UIflow with your API key，Select the cloud file icon in the top right，select the image tab，click Add image and browse for an image，choose your image and upload, its name will appear in the list if it has successfully been uploaded. Display the image In the UI designer grab an image placeholder and set it in the middle of the screen. Click on the image placeholder，choose your image name from the drop down list Image manipulation After uploading an image and assigning it to the place holder, you can manipulate it with the image blocks in the UI blocks section. You can choose whether to show or hide the image and set its position on the screen. "},"en/Display/Graphic.html":{"url":"en/Display/Graphic.html","title":"Graphic","keywords":"","body":"Graphic Feature introduction Apart from the circle and rectangle provided in the UI designer, there are other shapes and elements we can program with the graphic blocks LCD clear Clear the screen LCD fill Fill the screen with the color selected in the color swatch LCD print x,y Display text on the screen at the selected x/y coordinates Font Set the font of the text with a font from the list LCD pixel Draw a pixel at the selected x/y coordinate line Draw a line from origin point x/y to end point x/y rect Draw a rectangle of a desired width and height triangle Define the coordinates of the 3 points of a triangle and draw it in the color specified circle Draw a circle from the x/y origin and choose the radius and color ellipse Draw an ellipse from the x/y origin, set the radius with 2 parameters and choose the color polygon Draw a polygon at the x/y origin with a set radius and amount of sides Attention The M5GO screen dimentions are 320X240 Example Create a triangle and set it's color to blue "},"en/Logic/Logic.html":{"url":"en/Logic/Logic.html","title":"Logic","keywords":"","body":"Logical judgment "},"en/Logic/if.html":{"url":"en/Logic/if.html","title":"if","keywords":"","body":"if condition Feature introduction The if block will run whatever code is inserted inside it, if the condition attached to the top of the block is fulfilled e.g. if button a pressed > set all rgb red if do The basic if block executes the code in the \"do\" position based on if the condition in the \"if\" position is met. The if section accepts the jigsaw puzzle shaped blocks such as button press event, maths and logic blocks or even sensor data from the units. if else This if block allows us to run code if more than one condition is met. If the first condition is not met then it will default to whatever is placed in the \"else\" position. More conditions can be added by clicking the small cog on the if block and inserting \"else if\" blocks. true Values of true or false (A.K.A \"Boolean\") can be used in the if condition to determine whether some predefined condition has been met. For example if you created a variable called game over and gave it the value True and placed this block in setup before the loop, and then used the = block in your if condition to check whether gameover is equal to true then the code placed next to \"do\" would run. Usage The if condition is highly necessary for any program of reasonable complexity, it allows the program to go in multiple directions based on events input by the user or some other predefined variable "},"en/Logic/logic_partA.html":{"url":"en/Logic/logic_partA.html","title":"Logical relationship","keywords":"","body":"Logic Operator Feature Introduction This block is used in combination with the if conditions and takes two inputs and compares them against each other. They can be compared with the following operators = is equal to, more than etc .. Usage 用数据建立一个关系式，并连接到if Block上用作判断条件，例：当陀螺仪X坐标大于90时，点亮RGB bar "},"en/Logic/logic_partB.html":{"url":"en/Logic/logic_partB.html","title":"logic operation","keywords":"","body":"logic operation Function Description Perform logical operations on \"and, or, not\" for two logical relations and When the left and right logical relations both hold, the result of the logical operation is True, otherwise it is False. or When the left and right logical relations have a, the result of the logical operation is True, otherwise False not Invert the logical result of an expression, that is, notTrue=False, notFalse=True Instructions Add the relationship that needs to be logically added to both sides, modify the operation type "},"en/Loops/Loops.html":{"url":"en/Loops/Loops.html","title":"Loop iteration","keywords":"","body":"Loop iteration "},"en/Loops/repeatA.html":{"url":"en/Loops/repeatA.html","title":"Conditional loop","keywords":"","body":"Conditional loop Function Description As the name suggests, a conditional loop refers to a loop that needs to satisfy certain conditions. When it meets the conditions we set, it loops through the contents of the program in Block. repeat n time Set the number of cycles repeat while Determine whether the condition is true or not, and when inception, infinite loop Instructions Add repaet to the program, set the number of loops (loop conditions), add the program that needs to loop "},"en/Loops/repeatB.html":{"url":"en/Loops/repeatB.html","title":"Data iteration","keywords":"","body":"Data iteration Function Description Simply put, data iteration is to assign a number of numbers, one after the other, to the same variable, and once for each assignment, run the contents of do once. for each item i in list Iterate over the contents of an array onto the variable i and run the contents of do once per iteration. count with i from a to b by c Increased from a to b , the number of each increment is c , and the result of each increase is iterated to the variable i, and once per iteration, the content of do is run once. break out of loop You can choose to jump out of the entire loop, or jump out of this loop, and execute when you execute the block. Instructions Add an iterative block to the program, set the iteration parameters, and the do program that runs after each iteration. Example: Iterate the brightness of the RGB bar from 0 to 100. "},"en/Operation/Operation.html":{"url":"en/Operation/Operation.html","title":"Data operation","keywords":"","body":"Data operation "},"en/Operation/Variables.html":{"url":"en/Operation/Variables.html","title":"Introducing variables","keywords":"","body":"Introducing variables What is a variable? A variable is like a container. We can give the variable a name, use it to store the data, read it, or change it. It is often used in actual programming. Create variable Click the Create variable option, enter the name of the variable, click OK to create Using variables For example: assign the variable initial value A=6, and add the variable 2 after one second. "},"en/Operation/Math.html":{"url":"en/Operation/Math.html","title":"Basic operation","keywords":"","body":"Basic operation Function Description There are some basic arithmetic blocks in Math, such as \"addition, subtraction, multiplication and division\". constant Fill in any number and connect to other objects for assignment Common operation Add data on both sides of the expression to add, subtract, multiply and divide power Surplus Add data on both sides of the expression to make the remainder Special number judgment Add a value to set whether the judgment is true (for example, whether it is odd or even or prime), if it is true, it is True, otherwise it is False. Array calculation Summing an array, calculating the maximum or minimum, the average, etc. Instructions Add data to both sides of the expression, assign the expression to a variable or other object, and get the result. "},"en/Operation/Random.html":{"url":"en/Operation/Random.html","title":"random number","keywords":"","body":"random number Function Description When making games or animations, we sometimes need some random elements, and Random can generate random numbers according to our needs. random fraction Randomly generate a number between 0 and 1 each time it is executed random integer Specify a random range, each time it is executed, randomly generate an integer in the range Instructions Set a random range with a constant and assign a random intger to a variable "},"en/Operation/List.html":{"url":"en/Operation/List.html","title":"list","keywords":"","body":"Introducing an array Function Description If the variable is a container, the array is a collection of many containers. We can assign values to any of the variables in the array. length of Measure the length of the array (ie the number of elements in the array) X is empty Determine whether an array is empty. When it is established, the expression is True, otherwise it is False. in list find Array index, indexed positive or reverse specified element create empty list Add a value to set whether the judgment is true (for example, whether it is odd or even or prime), if it is true, it is True, otherwise it is False. create list with Customize an array Instructions Add a create list to create an array, add some elements to the array, call iteratively or otherwise "},"en/Functions/Functions.html":{"url":"en/Functions/Functions.html","title":"Functions","keywords":"","body":"Functions What is a function？ Functions are a tool that help us wrap our code into one neat package that we can give a name, and then call that name anywhere in our program and it will run the code contained within it. Functions can help to keep our code neat and concise and avoid repeating the same things over and over. Create a function Select functions from the blocks menu and drag it to the coding area. Enter a new name for your function in the text box provided on the block. Using a function When we add a function to the coding area a new block will appear in the function blocks menu. We can add this block to other parts of our code and it will represent whatever code is put inside the main function block. "},"en/Remote/Remote.html":{"url":"en/Remote/Remote.html","title":"Remote","keywords":"","body":"remote control Function Description Remote control via device such as mobile phone or computer M5GO Remote QRcode Generate a QR code that can access the control page and display it on the screen Remote Switch Remote switch control, please click the gear button on the block to add a variable X before use. When controlling, close X to pass 1 and disconnect X to pass 0. Remote Button Remote button control, each time the button is clicked, the program in Block is executed once. Remote Slider Slider control (click the gear button on the block to add a variable X before use, and pass the X to the integer from 0 to 100) Remote Label Display information, you can choose some built-in label types, or enter custom text Instructions Add a QR code to generate a Block into the program, add a Remote Button, place the program to run into the block, and run the program. Control page Scan the QR code on the M5GO screen, or copy the link under the QR code option in the upper right corner of the UIFlow page to access the control page. "},"en/Units/Units.html":{"url":"en/Units/Units.html","title":"Units","keywords":"","body":"Units What is Unit? Unit is a function expansion module provided by the M5 system. Unit is a hardware foundation provided for more complex functions. Connect the Unit module Before programming with the Unit function, you need to connect the Unit to its corresponding port. Add Unit Block Click the Units option under the UI Simulator, check the Unit module you want to add, and click OK. Note: Some units have initial parameter settings. For example, Neopixel can set the total number of lights to be driven. You can click the added Unit Module pop-up property box to edit. Remove Unit Block Click on the Unit module that has been added and drag it to the trash can above to delete it. Input and output All Units modules can be divided into two types, input and output. Input type The input type Unit mainly transmits some environmental information in the form of data to M5GO in the form of collecting data. We can achieve control through the operation of these data Output type The output type Unit is mainly in the form of a driver, with M5GO as the control core, driving some hardware connected externally, such as the rotation of the steering gear. Analog and digital All Units modules can be divided into two types, input and output. Analog quantity Analog quantity is a quantity that can be changed continuously, just like a thermometer will have many temperature values during the change process. Digital quantity The digital quantity only has two states 0 and 1, just like a switch, only the on and off states "},"en/Units/ENV.html":{"url":"en/Units/ENV.html","title":"ENV","keywords":"","body":"ENV Function Description ENV environmental sensor, used to collect the temperature and humidity values of the environment, analyze and calculate the collected data, and connect our program functions with the outside world. Purchase Block Pressure Barometric pressure collection Temperature Temperature value acquisition Humidity Humidity value collection Use Cases Display the collected temperature value through the label and display it on the screen. "},"en/Units/Light.html":{"url":"en/Units/Light.html","title":"Light","keywords":"","body":"Light Function Description Light is an optical detection module that detects the illumination of the environment and transmits the data to M5GO in both analog and digital formats. Purchase Block Analog Value Illumination analog Digital Value Illumination digital Instructions The collected illumination values are logically judged, such as lighting the RGB bar when the illumination value is lower than 500, and extinguishing the RGB bar when the illumination value is greater than 500. "},"en/Units/PIR.html":{"url":"en/Units/PIR.html","title":"PIR","keywords":"","body":"PIR Function Description Inductive body module, when sensing the human body, will transmit signal \"1\" to M5GO, and by default, it will transmit \"0\" Purchase Block Status State detection value Use Cases When sensing the human body, illuminate the RGB bar on both sides of the M5GO "},"en/Units/Earth.html":{"url":"en/Units/Earth.html","title":"Earth","keywords":"","body":"Earth Function Description Earth is a soil moisture detection module that inserts the detection pins into the soil during use. Earth can collect humidity data and transmit it to M5GO in analog and digital form. Purchase Block Analog Value Humidity analog Digital Value Humidity digital quantity Use Cases Use case when the soil moisture is lower than 15, an audible prompt "},"en/Units/Neopixel.html":{"url":"en/Units/Neopixel.html","title":"Neopixel","keywords":"","body":"Neopixel Function Description Neopixel is a programmable control light strip. After setting the number of small lights on the light strip, we can control any RGB light on the light strip. Purchase Block Set index n rgb Drive a single RGB light Set from a to b rgb Drive range RGB light Set all rgb Drive all RGB lights Set brightness Set the Neopixel brightness value Use Cases Drive Neopixel to light 1 to 10 lights, emitting blue light "},"en/Units/Servo.html":{"url":"en/Units/Servo.html","title":"Servo","keywords":"","body":"Servo Function Description Servo is a steering gear, we can control it to rotate a certain angle (0~180) through the program Block rotate Specify rotation angle write Set pulse time (more precise control) Use Cases The steering gear is rotated to 90°. After one second, the steering gear is rotated to 60°. "}}